---
- name: Install Python Packages
  hosts: image
  remote_user: root
  become_user: root
  become: true

  vars:
    ansible_python_interpreter: /usr/bin/python
    pythonremove:
      ["python3-keyring",
      "python3-pyasn1",
      "python3-keyrings.alt",
      "python3-wheel",
      "python3-setuptools",
      "python-six",
      "enum34",
      "python-idna"
      ]

    pythonremovemodules:
      ["pyxdg",
      "pycrypto",
      "astral"
      ]

    pythoninstall:
      ["pip",
      "RPi.GPIO",
      "pgen",
      "requests",
      "pymodbus",
      "pymysql",
      "wheel",
      "awake",
      "setuptools",
      "pycrypto",
      "yolk3k",
      "snmp",
      "knxPython",
      "spur",
      "python-miio",
      "numpy",
      "scipy"
      ]


  tasks:
  - name: Link python
    file:
      dest: '/usr/local/bin/python3'
      src: '/usr/bin/python'
      state: link
      owner: root
      group: root

  - name: Create Group
    group:
      name: smarthome
      state: present

  - name: Create User
    user:
      name: smarthome
      shell: /bin/bash
      groups: smarthome
      append: no
      update_password: always
      password: ""
      comment: 'SmarthomeNG User'

  - name: Groups
    user:
      name: smarthome
      shell: /bin/bash
      groups: www-data, sudo, i2c, adm, audio, video, plugdev, input, netdev, spi, gpio, dialout
      append: yes

  - name: remove apt
    apt:
      name: "{{ item }}"
      state: absent
      autoremove: yes
      autoclean: yes
      purge: yes
    with_items: "{{ pythonremove }}"
    ignore_errors: yes

  - name: Fix
    command: 'apt-get -f -y install'

  - name: Install libffi-dev
    apt:
      name: libffi-dev
      state: latest
      install_recommends: no

  - name: Install libssl-dev
    apt:
      name: libssl-dev
      state: latest
      install_recommends: no

  - name: Install pip3
    apt:
      name: python3-pip
      state: present

  - name: Install yolk
    pip:
      name: yolk3k
      state: present
      executable: pip3

  - name: remove modules
    pip:
      name: "{{ item }}"
      state: absent
      executable: pip3
    with_items: "{{ pythonremovemodules }}"

  - name: check if rust exists
    stat:
      path: /home/smarthome/.cargo/bin/rustc
    register: rust_installed

  - name: download rust script
    get_url:
      url: https://sh.rustup.rs
      dest: /home/smarthome
      mode: 775
    when: rust_installed.stat.exists == False

  - name: install rust
    shell: "/home/smarthome/rustup-init.sh -y"
    async: 1000
    poll: 0
    become: true
    become_user: smarthome
    when: rust_installed.stat.exists == False
    register: rust_installer

  - name: Make tmp dir
    file:
      path: /home/smarthome/.ansible/tmp
      state: directory
      owner: smarthome
      group: smarthome
      mode: 0777

  - name: wait
    async_status: jid={{ rust_installer.ansible_job_id }}
    register: job_result
    until: job_result.finished
    retries: 80
    become: true
    become_user: smarthome
    when: rust_installed.stat.exists == False

  - name: Install modules
    pip:
      name: "{{ item }}"
      executable: pip3
      state: latest
      extra_args: --user --upgrade
    become: true
    become_user: smarthome
    environment:
      PATH: "{{ ansible_env.PATH }}:/home/smarthome/.cargo/bin"
    with_items: "{{ pythoninstall }}"

  - name: Update root pip
    pip:
      name: pip
      executable: pip3
      state: latest
      extra_args: --user --upgrade
    become: true
    become_user: root

  - name: Install psutil
    pip:
      name: psutil
      executable: pip3
      state: latest
      extra_args: --user
    become: true
    become_user: root

  - name: pygobjectfiles
    find:
      paths: /usr/lib/python3/dist-packages/
      patterns: "PyGObject*"
    register: pygobject_to_delete

  - name: Remove pygobject
    file:
      path: "{{ item.path }}"
      state: absent
    with_items: "{{ pygobject_to_delete.files }}"
    ignore_errors: yes
    register: deleted
  - debug: var=deleted

  - name: Purge python cache
    command: pip3 cache purge
    become: true
    become_user: smarthome

  - name: Purge root python cache
    command: pip3 cache purge
