---
- name: Install SmarthomeNG
  hosts: image
  remote_user: root
  become_user: root
  become: true

  vars:
    apt_install:
      [
      "rlwrap", #easier telnet / cli usage
      "gfortran", # scipy build
      "libatlas-base-dev", #uzsu / scipy
      "libxslt1-dev", #lxml package
      "libxml2-dev", #lxml package
      "graphviz", #uzsu
      "rrdtool", #rrd
      "librrd-dev", #rrd, maybe not necessary
      ]
    python_install:
      [
      "pymysql", #database
      "yolk3k" #nice python module management
      ]

    log_file_to_check: /usr/local/smarthome/var/log/smarthome-warnings.log
    wanted_pattern: (.*)SmartHomeNG initialization finished(.*)

  tasks:
  - name: Create Group
    group:
      name: smarthome
      state: present

  - name: Create User
    user:
      name: smarthome
      shell: /bin/bash
      groups: smarthome
      append: no
      update_password: always
      password: ""
      comment: 'SmarthomeNG User'

  - name: Groups
    user:
      name: smarthome
      shell: /bin/bash
      groups: www-data, sudo, i2c, adm, audio, video, plugdev, input, netdev, spi, gpio, dialout
      append: yes

  - name: install apt
    apt:
      name: "{{ item }}"
      state: latest
      autoremove: yes
      autoclean: yes
    with_items: "{{ apt_install }}"

  - name: install modules
    pip:
      name: "{{ item }}"
      state: latest
      executable: pip3
      extra_args: --user
    become: true
    become_user: smarthome
    with_items: "{{ python_install }}"

  - name: Git SmarthomeNG
    git:
      repo: 'git://github.com/smarthomeNG/smarthome.git'
      dest: /usr/local/smarthome
      version: master
      force: yes
    register: git
  - debug: var=git

  - name: Git Plugins
    git:
      repo: 'git://github.com/smarthomeNG/plugins.git'
      dest: /usr/local/smarthome/plugins
      version: master
      force: yes
    register: git2
    ignore_errors: yes
  - debug: var=git2

  - name: plugins ignore perm
    command: git config core.fileMode false chdir=/usr/local/smarthome/plugins

  - name: sh ignore perm
    command: git config core.fileMode false chdir=/usr/local/smarthome/

  - name: Change requirements
    file:
      path: /usr/local/smarthome/tools/build_requirements.py
      mode: 0777

  - name: Update requirements
    command: /usr/local/smarthome/tools/build_requirements.py

  - name: Install requirements
    pip:
        requirements: /usr/local/smarthome/requirements/base.txt
        executable: pip3
        state: latest
        extra_args: --user
    become: true
    become_user: smarthome

  - name: Copy Service
    copy:
      dest: /lib/systemd/system/smarthome.service
      src: configs/smarthome.service

  - name: Change Owner
    file:
      path: /usr/local/smarthome
      owner: smarthome
      group: smarthome
      mode: 0775
      recurse: yes
      state: directory

  - name: Remove astral
    pip: name=astral executable=pip3 state=absent

  - name: enable_service
    systemd: enabled=yes name=smarthome.service

  - name: Create log directory
    file:
      path: /usr/local/smarthome/var/log/
      state: directory
      mode: 0755
      owner: smarthome
      group: users

  - name: Delete sh-warnings log
    file:
      path: "{{ log_file_to_check }}"
      state: absent
    ignore_errors: yes

  - name: Init
    lineinfile:
      path: "{{ log_file_to_check }}"
      create: yes
      line: 'Init'
      owner: smarthome
      group: users

  - name: Check log
    shell: tail -n 1 {{ log_file_to_check }}
    register: tail_output

  - name: Create a variable
    set_fact:
      last_line_of_the_log_file: "{{ tail_output.stdout }}"

  - name: Restart smarthome service
    systemd: state=restarted name=smarthome.service
    async: 2000
    poll: 0
    become: true
    become_user: root
    register: restart_smarthome

  - name: Match "{{ wanted_pattern }}" appearing after "{{ last_line_of_the_log_file }}" in {{ log_file_to_check }}
    wait_for:
      path: "{{ log_file_to_check }}"
      search_regex: "{{ last_line_of_the_log_file }}\r(.*\r)*.*{{ wanted_pattern }}"
      timeout: 1800

  - name: List Modules
    command: "/home/smarthome/.local/bin/yolk --list"
    register: pip3
    ignore_errors: yes
    become: yes
    become_user: smarthome
    become_method: su
  - debug: var=pip3
