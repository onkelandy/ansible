---
- name: Install KNXD
  hosts: public
  remote_user: root
  become_user: root
  become: true

  vars:
    knxd:
      ["git-core",
      "build-essential",
      "dh-systemd",
      "autoconf",
      "libtool",
      "libusb-1.0-0-dev",
      "pkg-config",
      "libsystemd-dev",
      "libev-dev",
      "cmake"]

  tasks:

  - name: Install Prerequisites
    apt:
      name: "{{ item }}"
      state: latest
      update_cache: yes
      install_recommends: yes
    with_items: "{{ knxd }}"

  - name: Git KNXD
    git:
      repo: 'https://github.com/knxd/knxd.git'
      dest: /root/knxd
      version: debian
    register: git
  - debug: var=git

  - name: get_libfmt
    command: "./get_libfmt"
    args:
      chdir: /root/knxd/tools/
    register: get_libfmt
    ignore_errors: yes
  - debug: var=get_libfmt

  - name: Build KNXD
    command: "dpkg-buildpackage -b -uc"
    args:
      chdir: /root/knxd/

  - name: Create deb-files directory
    file: path=/etc/deb-files/ state=directory mode=0755

  - name: List knxd deb files
    shell: ls knxd*.deb
    args:
      chdir: /root/
    register: knxd_files

  - name: List additional knxd
    shell: ls knxd*.*
    args:
      chdir: /root/
    register: knxd_add_files

  - name: Copy deb files
    copy:
      remote_src: True
      src: "/root/{{ item }}"
      dest: /etc/deb-files/
    with_items: "{{ knxd_files.stdout_lines }}"

  - name: Delete knxd dir
    file: path=/root/knxd/ state=absent
  - name: Delete knxd.deb files
    file: path="/root/{{ item }}" state=absent
    with_items: "{{ knxd_files.stdout_lines }}"
  - name: Delete knxd additional files
    file: path="/root/{{ item }}" state=absent
    with_items: "{{ knxd_add_files.stdout_lines }}"

  - name: Install knxd
    apt: deb="/etc/deb-files/{{ item.1 }}" force=yes state=present
    with_indexed_items: "{{ knxd_files.stdout_lines }}"
    register: knxd
  - debug: var=knxd

  - name: clear conf
    lineinfile: dest=/etc/knxd.conf state=absent regexp='(.*)'

  - name: knxd conf add
    lineinfile:
      path: /etc/knxd.conf
      line: 'KNXD_OPTS=/etc/knxd.ini'
      mode: 0755
      owner: smarthome
      group: smarthome

  - name: Copy knxd.ini
    copy:
      src: configs/knxd.ini
      dest: /etc/
      mode: 0755
      owner: smarthome
      group: smarthome

  - name: Copy knxd.ini server
    copy:
      src: configs/knxd_IPServer.ini
      dest: /etc/
      mode: 0755
      owner: smarthome
      group: smarthome

  - name: Copy knxd.ini serial
    copy:
      src: configs/knxd_Serial.ini
      dest: /etc/
      mode: 0755
      owner: smarthome
      group: smarthome

  - name: Stop knxd socket
    systemd: state=stopped name=knxd.socket

  - name: Stop knxd service
    systemd: state=stopped name=knxd.service

  - name: Restart knxd socket
    systemd: state=restarted name=knxd.socket
    register: knxd_socket

  - name: Restart knxd service
    systemd: state=restarted name=knxd.service
    when: knxd_socket

  - name: Create User
    user:
      name: smarthome
      shell: /bin/bash
      groups: www-data, sudo, i2c, adm, audio, video, plugdev, input, netdev, spi, gpio, dialout
      append: yes
      update_password: always
      password: ""
      comment: 'SmarthomeNG User'

  - name: chmod conf
    file:
      path: /etc/knxd.conf
      state: touch
      owner: smarthome
      group: smarthome
      mode: 0755

  - name: Add dialout
    user:
      name: knxd
      groups: dialout
      append: yes

  - name: udev
    lineinfile:
      path: /etc/udev/rules.d/70-knxd.rules
      create: yes
      line: 'ACTION=="add", SUBSYSTEM=="tty", ATTRS{id}=="00241011", KERNELS=="3f201000.uart", SYMLINK+="ttyKNX1", OWNER="knxd"'

  - name: enable_socket
    systemd: enabled=yes name=knxd.socket
    register: enable_knxd_socket
  - debug: var=enable_knxd_socket

  - name: enable_service
    systemd: enabled=yes name=knxd.service
    register: enable_knxd_service
  - debug: var=enable_knxd_service
