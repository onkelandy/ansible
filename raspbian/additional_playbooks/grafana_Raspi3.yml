---
- name: Install Grafana
  hosts: all
  remote_user: root
  become_user: root
  become: true

  vars:
    dashboards: [
          {
            "name": "smarthome",
            "file": "../configs/influxdb.json",
            "dash_name": "Smarthome"
          }
        ]

  tasks:
  - name: key
    apt_key:
      url: https://packages.grafana.com/gpg.key
      state: present
      validate_certs: False

  - name: repo
    apt_repository:
      repo: deb https://packages.grafana.com/oss/deb stable main
      state: present
      filename: grafana

  - name: Install
    apt:
      name: grafana
      state: latest
      update_cache: yes

  - name: logfile
    blockinfile:
      path: "/etc/rsyslog.d/grafana.conf"
      create: yes
      block: |
      template(name="grafana" type="string" string= "%TIMESTAMP% %HOSTNAME% %syslogtag% %pri-text:R,ERE,1,FIELD:local7.(.*)--end%%msg:R,ERE,2,FIELD:(.*)msg=(.*)--end:sp-if-no-1st-sp%%msg:R,ERE,2,FIELD:(.*)msg=(.*)--end:drop-last-lf%\n")
      if $syslogfacility-text == 'local7' and ($programname == 'grafana-server' or $programname == 'grafana') then {
        action(type="omfile" file="/var/log/grafana.log" template="grafana" FileGroup="adm"  FileCreateMode="0644")
        stop
      }
    ignore_errors: yes

  - name: rooturl
    lineinfile:
      dest: /etc/grafana/grafana.ini
      insertafter: '^;root_url ='
      line: 'root_url = %(protocol)s://%(domain)s/grafana/'

  - name: create systemd dir
    file:
      path: /etc/systemd/system/grafana-server.service.d/
      state: directory

  - name: service_conf
    blockinfile:
      path: /etc/systemd/system/grafana-server.service.d/service_grafana_fix.conf
      state: present
      create: yes
      owner: smarthome
      group: grafana
      mode: 0644
      block: |
        [Service]
        PermissionsStartOnly=true
        ExecStartPre=+/usr/bin/touch /var/log/grafana.log
        ExecStartPost=+/usr/bin/chown grafana:adm /var/log/grafana.log
        ExecStartPost=+/usr/bin/chmod 0644 /var/log/grafana.log

  - name: logfolder
    replace:
      destfile: /etc/grafana/grafana.ini
      regexp: "^;logs = /var/log/grafana"
      replace: "logs = /var/log"
    ignore_errors: yes

  - name: syslog
    replace:
      destfile: /etc/grafana/grafana.ini
      regexp: "^;mode = console file"
      replace: "mode = syslog"
    ignore_errors: yes

  - name: tag
    replace:
      destfile: /etc/grafana/grafana.ini
      regexp: "^;tag ="
      replace: "tag = grafana"
    ignore_errors: yes

  - name: Groups
    user:
      name: grafana
      groups: adm
      append: yes

  - name: Restart Grafana
    systemd: state=restarted name=grafana-server.service

  - name: pause
    pause:
      seconds: 20

  - name: datasource1
    uri:
      url: http://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}/grafana/api/datasources/name/smarthome
      user: admin
      password: admin
      force_basic_auth: yes
    register: grafana_influxdb
    failed_when: false
    changed_when: false
  - debug: var=grafana_influxdb

  - name: datasource2
    uri:
      url: http://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}/grafana/api/datasources
      method: POST
      user: admin
      password: admin
      body:
        name: "smarthome"
        type: "influxdb"
        url: "http://127.0.0.1:8086"
        access: "proxy"
        user: "root"
        password: "root"
        database: "smarthome"
        isDefault: true
      force_basic_auth: yes
      status_code: 200
      body_format: json
    when: "grafana_influxdb.status == 404"
    ignore_errors: yes

  - name: users
    uri:
      url: http://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}/grafana/api/admin/users
      user: "admin"
      password: "admin"
      method: POST
      force_basic_auth: yes
      body_format: json
      body:
        "name": "Smarthome"
        "login": "smarthome"
        "password": "smarthome"
        "email": "root@localhost"
    register: grafana_users
    failed_when: false
    changed_when: false
  - debug: var=grafana_users

  - name: getid
    uri:
      url: http://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}/grafana/api/users/lookup?loginOrEmail=smarthome
      user: "admin"
      password: "admin"
      method: GET
      force_basic_auth: yes
    register: user_id
  - debug: msg="Smarthome ID is {{ user_id['json']['id'] }}"

  - name: permission
    uri:
      url: http://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}/grafana/api/admin/users/{{ user_id['json']['id'] }}/permissions
      user: "admin"
      password: "admin"
      method: PUT
      force_basic_auth: yes
      body_format: json
      body:
        isGrafanaAdmin: true
    register: grafana_permission
  - debug: var=grafana_permission

  - name: role
    uri:
      url: http://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}/grafana/api/org/users/{{ user_id['json']['id'] }}
      user: "admin"
      password: "admin"
      method: PATCH
      force_basic_auth: yes
      body_format: json
      body:
        role: "Admin"
    register: grafana_role
  - debug: var=grafana_role

  - name: dashboard
    uri:
      url: http://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}/grafana/api/dashboards/db
      method: POST
      user: "smarthome"
      password: "smarthome"
      body: "{{ lookup('template', item.file) }}"
      status_code: 200
      body_format: json
      force_basic_auth: yes
    with_items: "{{ dashboards }}"
    register: db
    ignore_errors: yes
  - debug: msg="Dashboard ID is {{ db['results'][0]['json']['id'] }}"

  - name: star
    uri:
      url: http://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}/grafana/api/user/stars/dashboard/{{ db['results'][0]['json']['id'] }}
      method: POST
      user: "smarthome"
      password: "smarthome"
      force_basic_auth: yes
      body_format: json
    ignore_errors: yes
